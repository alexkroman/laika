<!-- Start Generic Patient Data Child Module -->
<h5><%= patient_child_model_display_name %></h5>
<table>

<% # There is a patient data child object... display the data %>
<% if patient_child_model_object %>

<%   patient_child_model_div_id = patient_child_model_object.class.class_name + 
                                       patient_child_model_object.id.to_s %>
<div id="<%= patient_child_model_div_id %>">

<%   # Iterate over all of the views in this patient data child to display to user %>
<%   view = patient_child_model_object.view 
     view.fields.each do |field| -%>
<tr class="<%= cycle("darkzebra", "lightzebra")%>">
  <td class="lighttext"><%= field.label %></td>
  <td><%= field.value %></td>
</tr>
<%   end -%>

<%   # Allow ability to edit or delete this patient data child via the interface %>
<tr class="<%= cycle("darkzebra", "lightzebra")%>">
  <td></td>
  <td>
    <span>
      <%= link_to_remote 'Edit', :update => patient_child_model_div_id,
	                             :url => edit_patient_registration_information_path(patient),
	                             :method => 'get' %>
	</span>
	<span>
	  <%= link_to_remote 'Remove', :update => patient_child_model_div_id,
	                               :url => patient_registration_information_path(patient),
	                               :method => 'delete' %>
	</span>
  </td>
</tr>

</div>

<% # There are no patient_child_model_objects... Allow the user to create some %>
<% else -%>
<tr class="darkzebra">
  <td class="lighttext" colspan="2">
     There is no <%= patient_child_model_display_name%> data for this test case<br>
     <%= link_to_remote 'Create New ' + patient_child_model_display_name, 
           :update => patient_child_class.class_name + "Container", 
           :url => new_patient_registration_information_path(patient), 
           :method => 'get' %>
  </td>
</tr>
<% end -%>

</table>  
<!-- End Generic Patient Data Child Module -->